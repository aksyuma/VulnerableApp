EMPTY_LABEL=

# Exception Code Labels
INVALID_END_POINT=다음 {0} 엔드포인트를 사용할 수 없습니다. allEndPoint 호출에서 엔드포인트 이름을 확인하고 다시 시도하세요.
INVALID_LEVEL=다음 {0} 레벨은 유효한 레벨 값이 아닙니다. allEndPoint 호출에서 지원되는 레벨과 엔드포인트를 확인하고 다시 시도하세요.
UNAVAILABLE_LEVEL=다음 {0} 레벨은 {1} 엔드포인트에서 사용할 수 없습니다. allEndPoint 호출에서 지원되는 레벨과 엔드포인트를 확인하고 다시 시도하세요.
INVALID_ACCESS=다음 {0} 메서드에 접근할 수 없습니다. 부적절한 가시성이나 잘못된 메서드 정의가 원인일 수 있습니다. 로그를 확인하세요.
INVALID_AGRUMENTS=다음 {0} 메서드에 올바른 인수 세트가 전달되지 않았습니다. 로그를 확인하세요.
SYSTEM_ERROR=시스템 오류가 발생했습니다. 로그를 확인하세요.

# XSS based Injections
XSS_VULNERABILITY=크로스 사이트 스크립팅(XSS) 공격은 악성 스크립트가 양성이고 신뢰할 수 있는 웹사이트에 주입되는 일종의 인젝션 공격입니다. XSS 공격은 공격자가 웹 애플리케이션을 사용하여 일반적으로 브라우저 측 스크립트 형태의 악성 코드를 다른 최종 사용자에게 보낼 때 발생합니다. 이러한 공격을 허용하는 결함은 매우 광범위하게 퍼져 있으며, 웹 애플리케이션이 사용자의 입력을 검증하거나 인코딩하지 않고 출력에 사용하는 모든 곳에서 발생할 수 있습니다. <br/> <br/> 공격자는 XSS를 사용하여 악성 스크립트를 의심하지 않는 사용자에게 보낼 수 있습니다. 최종 사용자의 브라우저는 해당 스크립트를 신뢰해서는 안 된다는 것을 알 방법이 없어 스크립트를 실행합니다. 브라우저는 스크립트가 신뢰할 수 있는 출처에서 왔다고 생각하기 때문에, 악성 스크립트는 브라우저가 보유하고 있는 쿠키, 세션 토큰 또는 해당 사이트와 함께 사용되는 기타 민감한 정보에 접근할 수 있습니다. 이러한 스크립트는 HTML 페이지의 내용을 다시 작성할 수도 있습니다. <br/><br/> XSS에 대한 자세한 정보: <ol><li><a href="https://owasp.org/www-community/attacks/xss/" target="_blank">Owasp XSS</a> <li><a href="https://www.google.com/about/appsecurity/learning/xss/" target="_blank">Google 애플리케이션 보안</a></ol>

#### AttackVector description
PERSISTENT_XSS_HTML_TAG_URL_PARAM_DIRECTLY_INJECTED_IN_DIV_TAG="comment" 쿼리 파라미터의 값이 "div" 태그에 직접 추가됩니다.
PERSISTENT_XSS_HTML_TAG_URL_PARAM_DIRECTLY_INJECTED_IN_DIV_TAG_REPLACING_IMG_AND_INPUT_TAG="comment" 쿼리 파라미터의 값이 "<img"와 "<input" 태그를 대체한 후 "div" 태그에 직접 추가됩니다.
PERSISTENT_XSS_HTML_TAG_URL_PARAM_DIRECTLY_INJECTED_IN_DIV_TAG_REPLACING_IMG_AND_INPUT_TAG_CASE_INSENSITIVE="comment" 쿼리 파라미터의 값이 대소문자를 구분하지 않는 "<img"와 "<input" 태그를 대체한 후 "div" 태그에 직접 추가됩니다.
PERSISTENT_XSS_HTML_TAG_URL_PARAM_DIRECTLY_INJECTED_IN_DIV_TAG_REPLACING_IMG_AND_INPUT_TAG_IF_TAGS_ARE_PRESENT_BEFORE_NULL_BYTE="comment" 쿼리 파라미터의 값이 Null 바이트 이전에 이러한 태그가 존재하는 경우 "<img"와 "<input" 태그를 대체한 후 "div" 태그에 직접 추가됩니다.
PERSISTENT_XSS_HTML_TAG_URL_PARAM_DIRECTLY_INJECTED_IN_DIV_TAG_REPLACING_IMG_AND_INPUT_TAG_CASE_INSENSITIVEIF_TAGS_ARE_PRESENT_BEFORE_NULL_BYTE="comment" 쿼리 파라미터의 값이 Null 바이트 이전에 이러한 태그가 존재하는 경우 대소문자를 구분하지 않는 "<img"와 "<input" 태그를 대체한 후 "div" 태그에 직접 추가됩니다.
PERSISTENT_XSS_HTML_TAG_URL_PARAM_DIRECTLY_INJECTED_IN_DIV_TAG_AFTER_HTML_ESCAPING_POST_CONTENT_BEFORE_NULL_BYTE="comment" 쿼리 파라미터의 값이 Null 바이트 이전의 내용을 HTML 이스케이핑한 후 "div" 태그에 직접 추가되며, 다른 부분은 그대로 유지됩니다.

## Image Tag Injections
XSS_IMAGE_TAG_INJECTION=$XSS_VULNERABILITY <br> 이 취약점은 XSS 공격이 포함된 이미지 태그와 관련이 있습니다. 만약 ..

#### Attack Vector Description
XSS_DIRECT_INPUT_SRC_ATTRIBUTE_IMG_TAG=URL 파라미터가 이미지 태그의 src 속성에 직접 추가됩니다.
XSS_QUOTES_ON_INPUT_SRC_ATTRIBUTE_IMG_TAG=URL 파라미터에 따옴표가 추가된 후 이미지 태그의 src 속성에 직접 추가됩니다.
XSS_HTML_ESCAPE_ON_DIRECT_INPUT_SRC_ATTRIBUTE_IMG_TAG=URL 파라미터에 대해 HTML 이스케이핑이 수행된 후 이미지 태그의 src 속성에 직접 추가됩니다.
XSS_HTML_ESCAPE_ON_DIRECT_INPUT_AND_REMOVAL_OF_VALUES_WITH_PARENTHESIS_SRC_ATTRIBUTE_IMG_TAG=URL 파라미터에 대해 HTML 이스케이핑과 함께 괄호를 포함하는 값의 제거가 수행된 후 이미지 태그의 src 속성에 직접 추가됩니다.
XSS_QUOTES_AND_WITH_HTML_ESCAPE_ON_INPUT_SRC_ATTRIBUTE_IMG_TAG=URL 파라미터에 대해 HTML 이스케이핑이 수행된 후 따옴표 안에 넣어져 이미지 태그의 src 속성에 삽입됩니다.
XSS_HTML_ESCAPE_PLUS_FILTERING_ON_INPUT_SRC_ATTRIBUTE_IMG_TAG_BUT_NULL_BYTE_VULNERABLE=URL 파라미터는 HTML 이스케이핑되고, 파일 이름 화이트리스트에 대해 검증된 후 이미지 태그의 src 속성에 삽입됩니다. 그러나 파일 이름을 검증하는 검증기가 Null 바이트 인젝션에 취약합니다.
XSS_QUOTES_AND_WITH_HTML_ESCAPE_PLUS_FILTERING_ON_INPUT_SRC_ATTRIBUTE_IMG_TAG=URL 파라미터는 HTML 이스케이핑되고, 파일 이름 화이트리스트에 대해 검증된 후 따옴표 안에 넣어져 이미지 태그의 src 속성에 삽입됩니다.

## Html Tag Injection
XSS_HTML_TAG_INJECTION=HTML 태그 기반 XSS 공격.
XSS_DIRECT_INPUT_DIV_TAG=HTML 태그가 div 태그에 직접 주입됩니다.

### Attack vectors
XSS_DIRECT_INPUT_DIV_TAG=URL 매개변수가 div 태그에 직접 추가됩니다.
XSS_DIRECT_INPUT_DIV_TAG_AFTER_REMOVING_VALUES_CONTAINING_ANCHOR_SCRIPT_AND_IMG_TAG=스크립트/이미지 및 앵커 태그를 포함하지 않는 경우, URL 매개변수가 div 태그에 직접 추가됩니다.
XSS_DIRECT_INPUT_DIV_TAG_AFTER_REMOVING_VALUES_CONTAINING_ANCHOR_SCRIPT_IMG_TAG_AND_ALERT_KEYWORD=스크립트/이미지/앵커 태그와 JavaScript 및 Alert 키워드를 포함하지 않는 경우, URL 매개변수가 div 태그에 직접 추가됩니다.

# URL Redirection
## Location Header Injection
OPEN_REDIRECTION_VULNERABILITY_3XX_BASED=오픈 리다이렉션 취약점은 애플리케이션이 사용자가 제어할 수 있는 데이터를 안전하지 않은 방식으로 리다이렉션 대상에 포함할 때 발생합니다.<br/> 공격자는 애플리케이션 내에서 임의의 외부 도메인으로 리다이렉션을 유발하는 URL을 구성할 수 있습니다. 이러한 동작은 애플리케이션 사용자를 대상으로 한 피싱 공격을 용이하게 하는 데 활용될 수 있습니다.<br/> 정확한 도메인을 대상으로 하고 유효한 SSL 인증서(SSL이 사용되는 경우)가 있는 진정한 애플리케이션 URL을 사용할 수 있는 능력은 피싱 공격에 신뢰성을 부여합니다. 많은 사용자들이 이러한 기능을 확인하더라도 다른 도메인으로의 후속 리다이렉션을 알아차리지 못하기 때문입니다. <br/><br/> <a href="https://www.w3.org/Protocols/rfc2616/rfc2616.html">RFC 2616 - "하이퍼텍스트 전송 프로토콜 - HTTP/1.1" target="_blank"</a>은 브라우저가 지정된 위치로 리다이렉션하도록 하는 다양한 3xx 상태 코드를 정의하며, 이 구현은 3xx 상태 코드를 기반으로 합니다.<br/><br/> 중요 링크:<ol> <li><a href="http://projects.webappsec.org/w/page/13246981/URL%20Redirector%20Abuse" target="_blank">WASC-38</a><br/></li> <li><a href="https://cwe.mitre.org/data/definitions/601.html" target="_blank">CWE-601</a><br/></li> <li><a href="https://portswigger.net/kb/issues/00500100_open-redirection-reflected" target="_blank">Port Swigger의 취약점 문서</a><br/></li> <li><a href="https://en.wikipedia.org/wiki/URL_redirection" target="_blank">URL 리다이렉션의 목적을 설명하는 위키 링크</a></li> <li><a href="https://github.com/payloadbox/open-redirect-payload-list" target="_blank">오픈 리다이렉션 페이로드 목록</a></li> <li><a href="https://appsec-labs.com/portal/case-study-open-redirect/" target="_blank">도메인을 접두사로 추가하는 사례 연구</a></li> </ol> 일부 오해: <a href="https://security.stackexchange.com/questions/59517/are-url-shorteners-vulnerable-due-to-open-redirects" target="_blank">URL 단축기가 오픈 리다이렉트로 인해 "취약"한가요?</a><br/>
OPEN_REDIRECT_QUERY_PARAM_DIRECTLY_ADD_TO_LOCATION_HEADER="returnTo" 쿼리 매개변수의 값이 "Location" 헤더에 직접 추가됩니다.
OPEN_REDIRECT_QUERY_PARAM_DIRECTLY_ADD_TO_LOCATION_HEADER_IF_NOT_HTTP_HTTPS_WWW_OR_DOMAIN_IS_SAME="returnTo" 쿼리 매개변수의 값이 "http", "www", "https"로 시작하지 않거나 도메인이 애플리케이션과 동일한 경우 "Location" 헤더에 직접 추가됩니다.
OPEN_REDIRECT_QUERY_PARAM_DIRECTLY_ADD_TO_LOCATION_HEADER_IF_NOT_HTTP_HTTPS_WWW_//_OR_DOMAIN_IS_SAME="returnTo" 쿼리 매개변수의 값이 "http", "www", "https", "//"로 시작하지 않거나 도메인이 애플리케이션과 동일한 경우 "Location" 헤더에 직접 추가됩니다.
OPEN_REDIRECT_QUERY_PARAM_DIRECTLY_ADD_TO_LOCATION_HEADER_IF_NOT_HTTP_WWW_HTTPS_//_NULL_BYTE_OR_DOMAIN_IS_SAME="returnTo" 쿼리 매개변수의 값이 "http", "www", "https", "//", Null 바이트로 시작하지 않거나 도메인이 애플리케이션과 동일한 경우 "Location" 헤더에 직접 추가됩니다.
OPEN_REDIRECT_QUERY_PARAM_DIRECTLY_ADD_TO_LOCATION_HEADER_IF_NOT_HTTP_HTTPS_//WWW%_OR_DOMAIN_IS_SAME="returnTo" 쿼리 매개변수의 값이 "http", "www", "https", "//"로 시작하지 않고 ASCII 값 33 미만의 문자가 포함되어 있지 않거나 도메인이 애플리케이션과 동일한 경우 "Location" 헤더에 직접 추가됩니다.
OPEN_REDIRECT_QUERY_PARAM_DIRECTLY_ADDED_TO_LOCATION_HEADER_BY_ADDING_DOMAIN_AS_PREFIX="returnTo" 쿼리 매개변수의 값에 애플리케이션의 도메인 이름을 접두사로 추가하여 "Location" 헤더에 직접 추가됩니다.

## Meta Tag based URL Redirection
